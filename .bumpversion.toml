# bump-my-version 配置文件 / bump-my-version configuration
# https://github.com/callowayproject/bump-my-version

[tool.bumpversion]
current_version = "0.1.0"
parse = """(?x)
    (?P<major>0|[1-9]\\d*)\\.
    (?P<minor>0|[1-9]\\d*)\\.
    (?P<patch>0|[1-9]\\d*)
    (?:
        -
        (?P<pre_l>[a-zA-Z-]+)
        (?P<pre_n>0|[1-9]\\d*)
    )?
"""
serialize = [
    "{major}.{minor}.{patch}-{pre_l}{pre_n}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

# 预发布版本配置 / Pre-release configuration
[tool.bumpversion.parts.pre_l]
values = ["dev", "rc", "final"]
optional_value = "final"

# Rust Cargo.toml - 关键：确保 Rust 版本同步
[[tool.bumpversion.files]]
filename = "Cargo.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

# Python pyproject.toml
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

# Python __init__.py
[[tool.bumpversion.files]]
filename = "python/vrl_python/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""

# CHANGELOG.md
[[tool.bumpversion.files]]
filename = "CHANGELOG.md"
search = "## [Unreleased]"
replace = """## [Unreleased]

## [{new_version}] - {now:%Y-%m-%d}"""
