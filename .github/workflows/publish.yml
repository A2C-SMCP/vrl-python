name: Publish to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read
  id-token: write  # IMPORTANT: 用于 PyPI 的 Trusted Publishing

jobs:
  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install maturin
        run: pip install maturin
      
      - name: Build wheels (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto

      # 为 Linux 构建 aarch64 架构的 wheel / Build Linux aarch64 wheel
      - name: Build wheels (Linux aarch64)
        if: matrix.os == 'ubuntu-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: aarch64
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      
      - name: Build wheels (macOS)
        if: matrix.os == 'macos-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist --find-interpreter
          sccache: 'true'
      
      - name: Build wheels (Windows)
        if: matrix.os == 'windows-latest'
        uses: PyO3/maturin-action@v1
        with:
          target: x64
          args: --release --out dist --find-interpreter
          sccache: 'true'
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: dist

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install maturin
        run: pip install maturin
      
      - name: Build sdist
        run: maturin sdist --out dist
      
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  publish-testpypi:
    name: Publish to TestPyPI (Pre-release)
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    # 只在 pre-release 时发布到 TestPyPI
    if: github.event.release.prerelease == true
    environment:
      name: testpypi  # ⚠️ 必须与 GitHub Settings 中的 Environment 名称一致
      url: https://test.pypi.org/p/vrl-python
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: List distributions
        run: ls -lh dist/
      
      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true

  publish-pypi:
    name: Publish to PyPI (Release)
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    # 只在正式 release 时发布到 PyPI
    if: github.event.release.prerelease == false
    environment:
      name: pypi  # ⚠️ 必须与 GitHub Settings 中的 Environment 名称一致
      url: https://pypi.org/p/vrl-python
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: List distributions
        run: ls -lh dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
